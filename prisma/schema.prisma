generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String     @id @default(cuid())
  name      String     @db.VarChar(255)
  ownerId   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  chatRooms ChatRoom[]
  members   Member[]
  owner     User       @relation(fields: [ownerId], references: [id])

  @@map("organizations")
}

model Member {
  id                  String           @id @default(cuid())
  userId              String
  organizationId      String
  role                Role
  label               String?          @db.VarChar(255)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @default(now()) @updatedAt
  accessibleChatRooms ChatRoomAccess[]
  organization        Organization     @relation(fields: [organizationId], references: [id])
  user                User             @relation(fields: [userId], references: [id])
  messages            Message[]

  @@index([organizationId])
  @@index([userId])
  @@map("members")
}

model User {
  id          String         @id @default(cuid())
  email       String         @unique
  password    String         @db.VarChar(255)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  memberships Member[]
  ownedOrgs   Organization[]

  @@map("users")
}

model ChatRoom {
  id             String           @id @default(cuid())
  name           String           @db.VarChar(255)
  organizationId String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now()) @updatedAt
  access         ChatRoomAccess[]
  organization   Organization     @relation(fields: [organizationId], references: [id])
  messages       Message[]

  @@index([organizationId])
  @@map("chat_rooms")
}

model ChatRoomAccess {
  id         String   @id @default(cuid())
  chatRoomId String
  memberId   String
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  member     Member   @relation(fields: [memberId], references: [id])

  @@unique([chatRoomId, memberId])
  @@map("chat_room_access")
}

model Message {
  id         String   @id @default(dbgenerated("gen_random_uuid()"))
  content    String
  senderId   String
  chatRoomId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  sender     Member   @relation(fields: [senderId], references: [id])

  @@index([chatRoomId])
  @@index([senderId])
  @@map("messages")
}

enum Role {
  OWNER
  MODERATOR
  MEMBER
}
